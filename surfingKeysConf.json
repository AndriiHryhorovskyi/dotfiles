{
    "OmniQueryHistory": [
        "query",
        "visual",
        "language",
        "resource",
        "create",
        "skip"
    ],
    "basicMappings": {},
    "findHistory": [
        "youtube",
        "wiki",
        "google",
        "duk",
        "duc",
        "vim",
        "black",
        "color",
        "imap",
        "vmap",
        "neovim",
        "-y",
        "Ctrl-y",
        "editor",
        "save",
        "file",
        "settings",
        "mapkey",
        "esc",
        "\\besc\\b",
        "\\bMRU\\b",
        "\\bO\\b",
        "\\btabs\\b",
        "\\bq\\b",
        "\\bgo\\b",
        "\\bAlt-s\\b",
        "see",
        "\\bclose\\b",
        "\\bt\\b",
        "t",
        "\\bh\\b",
        "D",
        "\\blicense\\b",
        "doro",
        "gr"
    ],
    "lastKeys": [
        "yj"
    ],
    "localPath": "",
    "marks": {
        "n": {
            "scrollLeft": 0,
            "scrollTop": 3818.40966796875,
            "url": "https://github.com/brookhong/Surfingkeys"
        }
    },
    "savedAt": 1644690211320,
    "showAdvanced": true,
    "snippets": "// an example to create a new mapping `ctrl-y`\n// mapkey('<ctrl-y>', 'Show me the money', function() {\n//    Front.showPopup('a well-known phrase uttered by characters in the 1996 film Jerry Maguire (Escape to close).');\n//});\n\n// an example to replace `T` with `gt`, click `Default mappings` to see how `T` works.\n//map('gt', 'T');\n\n// an example to remove mapkey `Ctrl-i`\n//unmap('<ctrl-i>');\n\napi.map('<ctrl-[>', '<Esc>');\napi.map('cw', 'ce');\napi.map('ow', 'oe');\napi.unmap('ob');\n\n\nsettings.tabsMRUOrder = false;\nconst API_KEY = 'ffce1384-d86a-4cdf-8bed-3dc9a123cd3d';\nconst API_URL = 'https://dictionaryapi.com/api/v3';\n\napi.Front.registerInlineQuery({\n    url: function(q) {\n        const url = `${API_URL}/references/learners/json/${q}?key=${API_KEY}`;\n        return url;\n    },\n    parseResult: function(res) {\n        try {\n            const [firstResult] = JSON.parse(res.text);\n            if (firstResult) {\n                let definitionsList = `<ul><li>No definitions found</li></ul>`;\n                let pronunciationsList = `<ul><li>No pronunciations found</li></ul>`;\n                if (firstResult.hasOwnProperty('shortdef')) {\n                    const definitions = [];\n                    for (let definition of firstResult.shortdef) {\n                        definitions.push(`${definition}`);\n                    }\n                    const definitionListItems = definitions.map(function(definition) {\n                        return `<li>${definition}</li>`;\n                    });\n                    definitionsList = `<ul>${definitionListItems.join('')}</ul>`;\n                    //TODO: Separate this function if possible\n                }\n                if (firstResult.hasOwnProperty('hwi')) {\n                   const pronunciations = [];\n                   const resultPronunciationsArray = firstResult.hwi.prs;\n                   if (resultPronunciationsArray && resultPronunciationsArray.length !== 0) {\n                       for (let i=0; i < resultPronunciationsArray.length; i++) {\n                          if (resultPronunciationsArray[i].l) {\n                            pronunciations.push(`<li>${resultPronunciationsArray[i].l} -- ${resultPronunciationsArray[i].ipa}</li>`);\n                          } else {\n                              pronunciations.push(`<li>${resultPronunciationsArray[i].ipa}</li>`);\n                          }\n                       }\n                       \n                       pronunciationsList = `<ul>${pronunciations.join('')}</ul>`;\n                   }\n                }\n                return `\n                   <h3>Pronunciations</h3>\n                   ${pronunciationsList}\n                   <hr/>\n                   <h3>Definitions</h3>\n                   ${definitionsList}\n                `;\n            } else {\n                return `\n                  <h3>This is not the definition you were looking for...</h3>\n                `;\n            }\n        } catch (e) {\n            console.log(e.message);\n            return 'Something bad happend... Look behind you, a three headed monkey!';\n        }\n    }\n});\n\n// set theme\nsettings.theme = `\n.sk_theme {\n    font-family: Input Sans Condensed, Charcoal, sans-serif;\n    font-size: 10pt;\n    background: #24272e;\n    color: #abb2bf;\n}\n.sk_theme tbody {\n    color: #fff;\n}\n.sk_theme input {\n    color: #d0d0d0;\n}\n.sk_theme .url {\n    color: #61afef;\n}\n.sk_theme .annotation {\n    color: #56b6c2;\n}\n.sk_theme .omnibar_highlight {\n    color: #528bff;\n}\n.sk_theme .omnibar_timestamp {\n    color: #e5c07b;\n}\n.sk_theme .omnibar_visitcount {\n    color: #98c379;\n}\n.sk_theme #sk_omnibarSearchResult ul li:nth-child(odd) {\n    background: #303030;\n}\n.sk_theme #sk_omnibarSearchResult ul li.focused {\n    background: #3e4452;\n}\n#sk_status, #sk_find {\n    font-size: 20pt;\n}`;\n// click `Save` button to make above settings to take effect.</ctrl-i></ctrl-y>"
}
